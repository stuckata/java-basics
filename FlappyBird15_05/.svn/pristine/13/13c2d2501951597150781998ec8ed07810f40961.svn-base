import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.font.*;

import javafx.scene.shape.Circle;
//import javafx.scene.text.Font;


import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;


public class Window extends JFrame {//implements Runnable{
	public static int width = 450, height = 600;
	
	//Circle circle = new Circle(200, 200, 50);
	
	Dimension windowSize = new Dimension (width, height);
	
	Image dbImage;
	Graphics dbg;
	
	//Image face;
	BufferedImage background;
	
	//Game Start
	boolean gameStarted=false;
		
		
	//Rectangle r;
	
	//boolean isSpacePressed;
	
	//static Column column = new Column();
	//static Column secondColumn = new Column("second"); 
	
	//Menu Buttons
    Rectangle startButton = new Rectangle(150, 200, 100, 25);
    Rectangle quitButton = new Rectangle(150, 250, 100, 25);
	
    //Bird
	static Bird bird = new Bird();
	
	//Thread
	static Thread t1 = new Thread(bird);
	
	public Window () {
		try {
			background = ImageIO.read(new File("src/images/background.gif"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//ImageIcon i = new ImageIcon("Bird2x.png");
		//face = i.getImage();
		setUndecorated(true);
		setSize(windowSize);
		setTitle("Flappy Bird");
		setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        setLocationRelativeTo(null);
       // r = new Rectangle(100,350,30,30);
        addKeyListener(new KeyListen());
        addMouseListener(new MouseHandler());
      //  setBackground(Color.CYAN);
		
	}
	
	public void paint(Graphics g) {
		dbImage = createImage(getWidth(), getHeight());
        dbg = dbImage.getGraphics();
        draw(dbg);
        g.drawImage(dbImage, 0, 0, this);
	}

	public void draw(Graphics g) {	
		//Background
		g.drawImage(background, 0, 0, this);

		//Check if the game is started
		if (!gameStarted) {
			//Menu
	        g.setFont(new Font("Arial", Font.BOLD, 26));
	        g.setColor(Color.WHITE);
	        g.drawString("FlappyBird!", 125, 175);
	        g.setColor(Color.CYAN);
	        g.fillRect(startButton.x, startButton.y, startButton.width, startButton.height);
	        g.setFont(new Font("Arial", Font.BOLD, 12));
	        g.setColor(Color.GRAY);
	        g.drawString("Start Game", startButton.x+10, startButton.y+17);
	        g.setColor(Color.CYAN);
	        g.fillRect(quitButton.x, quitButton.y, quitButton.width, quitButton.height);
	        g.setColor(Color.GRAY);
	        g.drawString("Quit Game", quitButton.x+12, quitButton.y+17);
		}
		else {
			//Game drawing
			bird.draw(g);
			bird.getFirstColumn().draw(g);
	 		bird.getSecondColumn().draw(g);
		}

		repaint();
	}

	public void startGame() {
		gameStarted=true;
		t1.start();
	}
	
	public static void main(String[] args) {
		new Window();
		//Thread t1 = new Thread(bird);
		//Thread t2 = new Thread(bird.getFirstColumn());
		//Thread t3 = new Thread(bird.getSecondColumn());

		//t1.start();
		//t2.start();
		//t3.start();
	}
	
//	public void move() {
//		r.y += 2;
//		column.move();
//		secondColumn.move();
//	}
	public class KeyListen extends KeyAdapter {
		public void keyReleased(KeyEvent e){
//			int keyCode = e.getKeyCode();
//			if (keyCode == KeyEvent.VK_SPACE) {
//				r.y -= 100;
//			}	
			bird.keyReleased(e);
        }
		
	}
//	public void run() {
//		try {
//			while (true) {
//				move();
//				Thread.sleep(11);
//			}
//		} catch (Exception e) {
//			System.out.println(e.fillInStackTrace());
//		}
//		
//	}
	
	public class MouseHandler extends MouseAdapter {
        //@Override
        public void mouseMoved(MouseEvent e){
           
        }
        //@Override
        public void mousePressed(MouseEvent e){
        	int mx=e.getX();
        	int my=e.getY();
        	if (mx>startButton.x && mx<startButton.x+startButton.width && my>startButton.y && my<startButton.y+startButton.height ) {
        		startGame();	
			}  
        }
    }	
}
