import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;



public class Column  implements Runnable{

	int x, y;
	
	Rectangle downRectangle, upRectangle;
	
	Column() {
		this.x = Main.width;
		this.y = chooseColumnPosition();
		int yPosition = chooseColumnPosition();
		this.downRectangle = new Rectangle(Main.width, yPosition, 50, Main.height - yPosition);
		this.upRectangle = new Rectangle(Main.width, 0, 50, Main.height - this.downRectangle.height - 200);
	}
	Column(String type) {
		if (type.equals("second"))
		{
			this.x = Main.width + Main.width / 2 + 25  ;
			this.y = chooseColumnPosition();
			int yPosition = chooseColumnPosition();
			this.downRectangle = new Rectangle(this.x, yPosition, 50, Main.height - yPosition);
			this.upRectangle = new Rectangle(downRectangle.x, 0, 50, Main.height - this.downRectangle.height - 150);
		}
	}
	
	
	public Rectangle getDownRectangle() {
		return this.downRectangle;
	}
	
	
	public Rectangle getUpRectangle() {
		return this.upRectangle;
	}
	
	public int chooseColumnPosition () {
		Random r = new Random();
		return r.nextInt(Main.width - Main.width / 2 ) + Main.width / 2; // returns 30-380
	}
	
	public void move() {
		downRectangle.x -= 2;
		upRectangle.x -= 2;
		if(downRectangle.x + downRectangle.width <= 0) {
			int yPosition = chooseColumnPosition();
			this.downRectangle.x = Main.width;
			this.downRectangle.y = yPosition;
			this.downRectangle.height = Main.height - yPosition;
					//new Rectangle(Main.width, yPosition, 50, Main.height - yPosition);
			this.upRectangle.x = Main.width;
			this.upRectangle.y = 0;
			this.upRectangle.height = Main.height - this.downRectangle.height - 150;
					//new Rectangle(Main.width, 0, 50, Main.height - this.downRectangle.height - 150);
		}
	}
	
	public void draw(Graphics g) {
		g.fillRect(downRectangle.x, downRectangle.y, downRectangle.width, downRectangle.height);
		g.fillRect(upRectangle.x, upRectangle.y, upRectangle.width, upRectangle.height);
	}
	
	public void run() {
		try {
			while (true) {
				move();
				Thread.sleep(11);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
	}
}